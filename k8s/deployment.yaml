apiVersion: v1
kind: Service
metadata:
  name: my-app-lb
spec:
  type: LoadBalancer
  selector:
    run: my-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: my-app
  name: my-app
spec:
  replicas: 1
  selector:
    matchLabels:
      run: my-app
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: my-app
    spec:
      containers:
        - image: jsj6121/bg:1.2
          name: my-app
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "production"
            - name: SPRING_DATASOURCE_MASTER_URL
              value: "jdbc:mysql://mysql-service:3306/bettingGround"
            - name: SPRING_DATASOURCE_MASTER_USERNAME
              value: "root"
            - name: SPRING_DATASOURCE_MASTER_PASSWORD
              value: "1234"
          resources: # 컨테이너에 할당된 자원의 제한 및 요청
            limits: # 자원의 최대 제한량
              cpu: 500m # CPU의 최대 사용량을 0.5 코어로 설정
            requests: # 자원의 최소 요청량
              cpu: 200m # CPU의 최소 사용량을 0.2 코어로 설정
          readinessProbe: # Pod의 준비 상태를 체크하는 메커니즘
            httpGet: # HTTP GET 요청을 통한 검사 방법
              path: / # 체크할 URL 경로
              port: 8080 # 체크할 포트
            initialDelaySeconds: 5 # 컨테이너 시작 후 처음으로 준비 상태 검사를 시작하기 전의 대기 시간 (5초)
            periodSeconds: 10 # 준비 상태 검사를 반복하는 주기 (10초)
